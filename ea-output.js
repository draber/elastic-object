!function(){"use strict";
/*!
     * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
     *
     * Copyright (c) 2014-2017, Jon Schlinkert.
     * Released under the MIT License.
     */
function t(t){return"[object Object]"===Object.prototype.toString.call(t)}function n(n){var e,r;return!1!==t(n)&&(void 0===(e=n.constructor)||!1!==t(r=e.prototype)&&!1!==r.hasOwnProperty("isPrototypeOf"))}var e={every:function(t,n){const e=this.entries();for(let[r,i]of e)if(!t(i,r,e,n))return!1;return!0},filter:function(t,n){const e=this.create({}),r=this.entries();for(let[i,o]of r)t(o,i,r,n)&&e.set(i,o);return e},find:function(t,e){const r=this.entries();for(let[i,o]of r)if(t(o,i,r,e))return n(o)?this.create(o):o},forEach:function(t,n){const e=this.entries();for(let[r,i]of e)t(i,r,e,n)},includes:function(t){return this.values().includes(t)},length:function(){return this.keys().length},map:function(t,n){const e=this.create({}),r=this.entries();for(let[i,o]of r)e.set(i,t(o,i,r,n));return e},reduce:function(t,n,e){const r=this.flatten();let i=n;for(let[n,o]of Object.entries(r))i=t(i,o,n,r,e);return i},some:function(t,n){const e=this.flatten();for(let[r,i]of Object.entries(e))if(t(i,r,e,n))return!0;return!1},sort:function(t){const n=this.flatten(),e=Object.entries(n).sort((([n,e],[r,i])=>t?t(e,i):e-i));return this.create(e.reduce(((t,[n,e])=>(set(t,n,e),t)),{}))}};const r=(t,e={},i="")=>{if(null==t)return e;return Array.isArray(t)&&(t={...t}),Object.entries(t).forEach((([t,o])=>{const s=i+(i?".":"")+t;n(o)||Array.isArray(o)?(e[s]=o,r(o,e,s)):e[s]=o})),e},i=t=>{const n=typeof t;return null!==t&&("object"===n||"function"===n)},o=new Set(["__proto__","prototype","constructor"]),s=new Set("0123456789");function c(t){const n=[];let e="",r="start",i=!1;for(const c of t)switch(c){case"\\":if("index"===r)throw new Error("Invalid character in an index");if("indexEnd"===r)throw new Error("Invalid character after an index");i&&(e+=c),r="property",i=!i;break;case".":if("index"===r)throw new Error("Invalid character in an index");if("indexEnd"===r){r="property";break}if(i){i=!1,e+=c;break}if(o.has(e))return[];n.push(e),e="",r="property";break;case"[":if("index"===r)throw new Error("Invalid character in an index");if("indexEnd"===r){r="index";break}if(i){i=!1,e+=c;break}if("property"===r){if(o.has(e))return[];n.push(e),e=""}r="index";break;case"]":if("index"===r){n.push(Number.parseInt(e,10)),e="",r="indexEnd";break}if("indexEnd"===r)throw new Error("Invalid character after an index");default:if("index"===r&&!s.has(c))throw new Error("Invalid character in an index");if("indexEnd"===r)throw new Error("Invalid character after an index");"start"===r&&(r="property"),i&&(i=!1,e+="\\"),e+=c}switch(i&&(e+="\\"),r){case"property":if(o.has(e))return[];n.push(e);break;case"index":throw new Error("Index was not closed");case"start":n.push("")}return n}function u(t,n){if("number"!=typeof n&&Array.isArray(t)){const e=Number.parseInt(n,10);return Number.isInteger(e)&&t[e]===t[n]}return!1}function f(t,n){if(u(t,n))throw new Error("Cannot use string index")}
/*!
     * ElasticObject <https://github.com/draber/elastic-object>
     *
     * Copyright (c) 2022, Dieter Raber.
     * Released under the MIT License.
     */
const a={...{assign:function(...t){return Object.assign(this,...t)},clone:function(){return this.create(structuredClone(this))},cloneProperty:function(t){const e=structuredClone(this.get(t));return n(e)?this.create(e):e},entries:function(){return Object.entries(this)},findPath:function(t,n){const e=this.flatten();for(let[r,i]of Object.entries(e))if(t(i,r,e,n))return r},flatten:function(){return this.create(r(this))},get:function(t){const e=function(t,n,e){if(!i(t)||"string"!=typeof n)return void 0===e?t:e;const r=c(n);if(0===r.length)return e;for(let n=0;n<r.length;n++){const i=r[n];if(null==(t=u(t,i)?n===r.length-1?void 0:null:t[i])){if(n!==r.length-1)return e;break}}return void 0===t?e:t}(this,t);return n(e)?this.create(e):e},has:function(t){return function(t,n){if(!i(t)||"string"!=typeof n)return!1;const e=c(n);if(0===e.length)return!1;for(const n of e){if(!i(t)||!(n in t)||u(t,n))return!1;t=t[n]}return!0}(this,t)},keys:function(){return Object.keys(this)},paths:function(){return Object.keys(this.flatten())},set:function(t,n){return function(t,n,e){if(!i(t)||"string"!=typeof n)return t;const r=t,o=c(n);for(let n=0;n<o.length;n++){const r=o[n];f(t,r),n===o.length-1?t[r]=e:i(t[r])||(t[r]="number"==typeof o[n+1]?[]:{}),t=t[r]}return r}(this,t,n)},toJson:function(t=!1){return JSON.stringify(this,null,t?"\t":null)},unset:function(t){return function(t,n){if(!i(t)||"string"!=typeof n)return!1;const e=c(n);for(let n=0;n<e.length;n++){const r=e[n];if(f(t,r),n===e.length-1)return delete t[r],!0;if(t=t[r],!i(t))return!1}}(this,t)},values:function(){return Object.values(this)}},...e};class h extends Object{static assign(t,...n){return Object.assign(new h(t),...n)}static create(t,n={}){return new h(t,n)}static fromEntries(t,n={}){return new h(Object.fromEntries(t),n)}constructor(t={},n={}){super(),h.prototype.loadPlugins=function(t){Object.entries(t).forEach((([t,n])=>{"function"==typeof n&&(h.prototype[t]=n)}))},this.loadPlugins({...a,...n}),h.prototype.create=function(t={}){return h.create(t,n)},Object.assign(this,t)}}}();
